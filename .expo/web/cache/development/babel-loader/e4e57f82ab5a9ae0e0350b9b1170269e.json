{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nimport * as React from \"react\";\nimport { NavigationContainer } from \"@react-navigation/native\";\nimport { createDrawerNavigator, DrawerContentScrollView } from \"@react-navigation/drawer\";\nimport { MaterialCommunityIcons } from \"@expo/vector-icons\";\nimport { NativeBaseProvider, Button, Box, HamburgerIcon, Pressable, Heading, VStack, Text, Center, HStack, Divider, Icon } from \"native-base\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nvar Drawer = createDrawerNavigator();\n\nfunction Component(props) {\n  return _jsx(NativeBaseProvider, {\n    children: _jsx(Center, {\n      children: _jsxs(Text, {\n        mt: \"12\",\n        fontSize: \"18\",\n        children: [\"This is \", props.route.name, \" page.\"]\n      })\n    })\n  });\n}\n\nvar getIcon = function getIcon(screenName) {\n  switch (screenName) {\n    case \"Profile\":\n      return \"email\";\n\n    case \"Home\":\n      return \"send\";\n\n    case \"Community\":\n      return \"heart\";\n\n    case \"Setting\":\n      return \"archive\";\n\n    case \"Invite member\":\n      return \"trash-can\";\n\n    case \"Premium\":\n      return \"alert-circle\";\n\n    default:\n      return undefined;\n  }\n};\n\nfunction CustomDrawerContent(props) {\n  return _jsx(NativeBaseProvider, {\n    children: _jsx(DrawerContentScrollView, _objectSpread(_objectSpread({}, props), {}, {\n      safeArea: true,\n      children: _jsxs(VStack, {\n        space: \"6\",\n        my: \"2\",\n        mx: \"1\",\n        children: [_jsxs(Box, {\n          px: \"4\",\n          children: [_jsx(Text, {\n            bold: true,\n            color: \"gray.700\",\n            children: \"Mail\"\n          }), _jsx(Text, {\n            fontSize: \"14\",\n            mt: \"1\",\n            color: \"gray.500\",\n            fontWeight: \"500\",\n            children: \"john_doe@gmail.com\"\n          })]\n        }), _jsxs(VStack, {\n          divider: _jsx(Divider, {}),\n          space: \"4\",\n          children: [_jsx(VStack, {\n            space: \"3\",\n            children: props.state.routeNames.map(function (name, index) {\n              return _jsx(Pressable, {\n                px: \"5\",\n                py: \"3\",\n                rounded: \"md\",\n                bg: index === props.state.index ? \"rgba(6, 182, 212, 0.1)\" : \"transparent\",\n                onPress: function onPress(event) {\n                  props.navigation.navigate(name);\n                },\n                children: _jsxs(HStack, {\n                  space: \"7\",\n                  alignItems: \"center\",\n                  children: [_jsx(Icon, {\n                    color: index === props.state.index ? \"primary.500\" : \"gray.500\",\n                    size: \"5\",\n                    as: _jsx(MaterialCommunityIcons, {\n                      name: getIcon(name)\n                    })\n                  }), _jsx(Text, {\n                    fontWeight: \"500\",\n                    color: index === props.state.index ? \"primary.500\" : \"gray.700\",\n                    children: name\n                  })]\n                })\n              });\n            })\n          }), _jsx(VStack, {\n            space: \"5\",\n            children: _jsxs(VStack, {\n              space: \"3\",\n              children: [_jsx(Pressable, {\n                px: \"5\",\n                py: \"3\",\n                children: _jsxs(HStack, {\n                  space: \"7\",\n                  alignItems: \"center\",\n                  children: [_jsx(Icon, {\n                    color: \"gray.500\",\n                    size: \"5\",\n                    as: _jsx(MaterialCommunityIcons, {\n                      name: \"bookmark\"\n                    })\n                  }), _jsx(Text, {\n                    color: \"gray.700\",\n                    fontWeight: \"500\",\n                    children: \"Family\"\n                  })]\n                })\n              }), _jsx(Pressable, {\n                px: \"5\",\n                py: \"2\",\n                children: _jsxs(HStack, {\n                  space: \"7\",\n                  alignItems: \"center\",\n                  children: [_jsx(Icon, {\n                    color: \"gray.500\",\n                    size: \"5\",\n                    as: _jsx(MaterialCommunityIcons, {\n                      name: \"bookmark\"\n                    })\n                  }), _jsx(Text, {\n                    color: \"gray.700\",\n                    fontWeight: \"500\",\n                    children: \"Friends\"\n                  })]\n                })\n              }), _jsx(Pressable, {\n                px: \"5\",\n                py: \"3\",\n                children: _jsxs(HStack, {\n                  space: \"7\",\n                  alignItems: \"center\",\n                  children: [_jsx(Icon, {\n                    color: \"gray.500\",\n                    size: \"5\",\n                    as: _jsx(MaterialCommunityIcons, {\n                      name: \"bookmark\"\n                    })\n                  }), _jsx(Text, {\n                    fontWeight: \"500\",\n                    color: \"gray.700\",\n                    children: \"Work\"\n                  })]\n                })\n              })]\n            })\n          })]\n        })]\n      })\n    }))\n  });\n}\n\nfunction MyDrawer() {\n  return _jsx(NativeBaseProvider, {\n    children: _jsx(Box, {\n      safeArea: true,\n      flex: 1,\n      children: _jsxs(Drawer.Navigator, {\n        drawerContent: function drawerContent(props) {\n          return _jsx(CustomDrawerContent, _objectSpread({}, props));\n        },\n        children: [_jsx(Drawer.Screen, {\n          name: \"Profile\",\n          component: Component\n        }), _jsx(Drawer.Screen, {\n          name: \"Home\",\n          component: Component\n        }), _jsx(Drawer.Screen, {\n          name: \"Setting\",\n          component: Component\n        }), _jsx(Drawer.Screen, {\n          name: \"Community\",\n          component: Component\n        }), _jsx(Drawer.Screen, {\n          name: \"Invite member\",\n          component: Component\n        }), _jsx(Drawer.Screen, {\n          name: \"Premium\",\n          component: Component\n        })]\n      })\n    })\n  });\n}\n\nexport default MyDrawer;","map":{"version":3,"sources":["C:/Users/admin/rescueme/src/screens/HomeScreen.js"],"names":["React","NavigationContainer","createDrawerNavigator","DrawerContentScrollView","MaterialCommunityIcons","NativeBaseProvider","Button","Box","HamburgerIcon","Pressable","Heading","VStack","Text","Center","HStack","Divider","Icon","Drawer","Component","props","route","name","getIcon","screenName","undefined","CustomDrawerContent","state","routeNames","map","index","event","navigation","navigate","MyDrawer"],"mappings":"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","sourcesContent":["import * as React from \"react\";\r\nimport { NavigationContainer } from \"@react-navigation/native\";\r\nimport {\r\n  createDrawerNavigator,\r\n  DrawerContentScrollView,\r\n} from \"@react-navigation/drawer\";\r\nimport { MaterialCommunityIcons } from \"@expo/vector-icons\";\r\nimport {\r\n  NativeBaseProvider,\r\n  Button,\r\n  Box,\r\n  HamburgerIcon,\r\n  Pressable,\r\n  Heading,\r\n  VStack,\r\n  Text,\r\n  Center,\r\n  HStack,\r\n  Divider,\r\n  Icon,\r\n} from \"native-base\";\r\nconst Drawer = createDrawerNavigator();\r\nfunction Component(props) {\r\n  return (\r\n    <NativeBaseProvider>\r\n\r\n    \r\n    <Center>\r\n      <Text mt=\"12\" fontSize=\"18\">\r\n        This is {props.route.name} page.\r\n      </Text>\r\n    </Center>\r\n    </NativeBaseProvider>\r\n  );\r\n}\r\n\r\nconst getIcon = (screenName) => {\r\n  switch (screenName) {\r\n    case \"Profile\":\r\n      return \"email\";\r\n    case \"Home\":\r\n      return \"send\";\r\n    case \"Community\":\r\n      return \"heart\";\r\n    case \"Setting\":\r\n      return \"archive\";\r\n    case \"Invite member\":\r\n      return \"trash-can\";\r\n    case \"Premium\":\r\n      return \"alert-circle\";\r\n    default:\r\n      return undefined;\r\n  }\r\n};\r\n\r\nfunction CustomDrawerContent(props) {\r\n  return (\r\n    <NativeBaseProvider>\r\n    <DrawerContentScrollView {...props} safeArea>\r\n      <VStack space=\"6\" my=\"2\" mx=\"1\">\r\n        <Box px=\"4\">\r\n          <Text bold color=\"gray.700\">\r\n            Mail\r\n          </Text>\r\n          <Text fontSize=\"14\" mt=\"1\" color=\"gray.500\" fontWeight=\"500\">\r\n            john_doe@gmail.com\r\n          </Text>\r\n        </Box>\r\n        <VStack divider={<Divider />} space=\"4\">\r\n          <VStack space=\"3\">\r\n            {props.state.routeNames.map((name, index) => (\r\n              <Pressable\r\n                px=\"5\"\r\n                py=\"3\"\r\n                rounded=\"md\"\r\n                bg={\r\n                  index === props.state.index\r\n                    ? \"rgba(6, 182, 212, 0.1)\"\r\n                    : \"transparent\"\r\n                }\r\n                onPress={(event) => {\r\n                  props.navigation.navigate(name);\r\n                }}\r\n              >\r\n                <HStack space=\"7\" alignItems=\"center\">\r\n                  <Icon\r\n                    color={\r\n                      index === props.state.index ? \"primary.500\" : \"gray.500\"\r\n                    }\r\n                    size=\"5\"\r\n                    as={<MaterialCommunityIcons name={getIcon(name)} />}\r\n                  />\r\n                  <Text\r\n                    fontWeight=\"500\"\r\n                    color={\r\n                      index === props.state.index ? \"primary.500\" : \"gray.700\"\r\n                    }\r\n                  >\r\n                    {name}\r\n                  </Text>\r\n                </HStack>\r\n              </Pressable>\r\n            ))}\r\n          </VStack>\r\n          <VStack space=\"5\">\r\n            <VStack space=\"3\">\r\n              <Pressable px=\"5\" py=\"3\">\r\n                <HStack space=\"7\" alignItems=\"center\">\r\n                  <Icon\r\n                    color=\"gray.500\"\r\n                    size=\"5\"\r\n                    as={<MaterialCommunityIcons name=\"bookmark\" />}\r\n                  />\r\n                  <Text color=\"gray.700\" fontWeight=\"500\">\r\n                    Family\r\n                  </Text>\r\n                </HStack>\r\n              </Pressable>\r\n              <Pressable px=\"5\" py=\"2\">\r\n                <HStack space=\"7\" alignItems=\"center\">\r\n                  <Icon\r\n                    color=\"gray.500\"\r\n                    size=\"5\"\r\n                    as={<MaterialCommunityIcons name=\"bookmark\" />}\r\n                  />\r\n                  <Text color=\"gray.700\" fontWeight=\"500\">\r\n                    Friends\r\n                  </Text>\r\n                </HStack>\r\n              </Pressable>\r\n              <Pressable px=\"5\" py=\"3\">\r\n                <HStack space=\"7\" alignItems=\"center\">\r\n                  <Icon\r\n                    color=\"gray.500\"\r\n                    size=\"5\"\r\n                    as={<MaterialCommunityIcons name=\"bookmark\" />}\r\n                  />\r\n                  <Text fontWeight=\"500\" color=\"gray.700\">\r\n                    Work\r\n                  </Text>\r\n                </HStack>\r\n              </Pressable>\r\n            </VStack>\r\n          </VStack>\r\n        </VStack>\r\n      </VStack>\r\n    </DrawerContentScrollView>\r\n    </NativeBaseProvider>\r\n  );\r\n}\r\nfunction MyDrawer() {\r\n  return (\r\n    <NativeBaseProvider>\r\n    <Box safeArea flex={1}>\r\n      <Drawer.Navigator\r\n        drawerContent={(props) => <CustomDrawerContent {...props} />}\r\n      >\r\n        <Drawer.Screen name=\"Profile\" component={Component} />\r\n        <Drawer.Screen name=\"Home\" component={Component} />\r\n        <Drawer.Screen name=\"Setting\" component={Component} />\r\n        <Drawer.Screen name=\"Community\" component={Component} />\r\n        <Drawer.Screen name=\"Invite member\" component={Component} />\r\n        <Drawer.Screen name=\"Premium\" component={Component} />\r\n      </Drawer.Navigator>\r\n    </Box>\r\n    </NativeBaseProvider>\r\n  );\r\n}\r\nexport default MyDrawer\r\n"]},"metadata":{},"sourceType":"module"}