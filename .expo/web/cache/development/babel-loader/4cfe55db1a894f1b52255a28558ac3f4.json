{"ast":null,"code":"export default function contains(context, node) {\n  if (context.contains) return context.contains(node);\n  if (context.compareDocumentPosition) return context === node || !!(context.compareDocumentPosition(node) & 16);\n}","map":{"version":3,"sources":["S:/projet_RescueMe/rescueme/node_modules/@react-native-aria/overlays/node_modules/dom-helpers/esm/contains.js"],"names":["contains","context","node","compareDocumentPosition"],"mappings":"AAQA,eAAe,SAASA,QAAT,CAAkBC,OAAlB,EAA2BC,IAA3B,EAAiC;AAG9C,MAAID,OAAO,CAACD,QAAZ,EAAsB,OAAOC,OAAO,CAACD,QAAR,CAAiBE,IAAjB,CAAP;AACtB,MAAID,OAAO,CAACE,uBAAZ,EAAqC,OAAOF,OAAO,KAAKC,IAAZ,IAAoB,CAAC,EAAED,OAAO,CAACE,uBAAR,CAAgCD,IAAhC,IAAwC,EAA1C,CAA5B;AACtC","sourcesContent":["/* eslint-disable no-bitwise, no-cond-assign */\r\n\r\n/**\r\n * Checks if an element contains another given element.\r\n * \r\n * @param context the context element\r\n * @param node the element to check\r\n */\r\nexport default function contains(context, node) {\r\n  // HTML DOM and SVG DOM may have different support levels,\r\n  // so we need to check on context instead of a document root element.\r\n  if (context.contains) return context.contains(node);\r\n  if (context.compareDocumentPosition) return context === node || !!(context.compareDocumentPosition(node) & 16);\r\n}"]},"metadata":{},"sourceType":"module"}