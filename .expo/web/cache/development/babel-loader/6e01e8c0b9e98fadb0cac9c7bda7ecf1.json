{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React from \"react\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport colors from \"../config/colors\";\nimport { NativeBaseProvider, Center, Heading, VStack, FormControl, Input, Button, HStack, Box, Text, Icon, Stack, Checkbox, AlertDialog, ScrollView } from \"native-base\";\nimport { Ionicons } from \"@native-base/icons/lib\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nvar RegisterScreenTwo = function RegisterScreenTwo(_ref) {\n  var navigation = _ref.navigation;\n\n  var _React$useState = React.useState(false),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      isOpen = _React$useState2[0],\n      setIsOpen = _React$useState2[1];\n\n  var onClose = function onClose() {\n    return setIsOpen(false);\n  };\n\n  var cancelRef = React.useRef(null);\n  return _jsx(NativeBaseProvider, {\n    children: _jsx(ScrollView, {\n      bg: \"#e4e8ff\",\n      children: _jsx(Center, {\n        w: \"100%\",\n        children: _jsxs(Box, {\n          safeArea: true,\n          p: \"2\",\n          w: \"90%\",\n          maxW: \"290\",\n          py: \"8\",\n          children: [_jsx(Heading, {\n            size: \"lg\",\n            color: \"coolGray.800\",\n            _dark: {\n              color: \"warmGray.50\"\n            },\n            fontWeight: \"semibold\",\n            children: \"Inscription\"\n          }), _jsx(Heading, {\n            mt: \"1\",\n            color: \"#013d77\",\n            _dark: {\n              color: \"warmGray.200\"\n            },\n            fontWeight: \"medium\",\n            size: \"xs\",\n            children: \"Deuxi\\xE8me \\xE9tape de l'inscription\"\n          }), _jsxs(VStack, {\n            space: 3,\n            mt: \"5\",\n            children: [_jsxs(FormControl, {\n              children: [_jsx(FormControl.Label, {\n                color: \"#013d77\",\n                children: \"Nom\"\n              }), _jsx(Input, {\n                borderColor: \"#013d77\"\n              })]\n            }), _jsxs(FormControl, {\n              children: [_jsx(FormControl.Label, {\n                color: \"#013d77\",\n                children: \"Pr\\xE9nom\"\n              }), _jsx(Input, {\n                borderColor: \"#013d77\"\n              })]\n            }), _jsxs(FormControl, {\n              children: [_jsx(FormControl.Label, {\n                children: \"Date de naissance\"\n              }), _jsx(Input, {\n                borderColor: \"#013d77\"\n              })]\n            }), _jsxs(FormControl, {\n              children: [_jsx(FormControl.Label, {\n                children: \"V\\xE9rification de l'identit\\xE9\"\n              }), _jsx(Text, {\n                italic: true,\n                fontSize: \"xs\",\n                children: \"Veuillez s'il vous pla\\xEEt prendre une photo de votre document d'identit\\xE9 pour confirmer votre identit\\xE9.\"\n              }), _jsx(Stack, {\n                direction: {\n                  base: \"column\",\n                  md: \"row\"\n                },\n                space: 4,\n                marginTop: \"2\",\n                children: _jsx(Button, {\n                  variant: \"subtle\",\n                  leftIcon: _jsx(Icon, {\n                    as: Ionicons,\n                    name: \"cloud-upload-outline\",\n                    size: \"sm\"\n                  }),\n                  children: \"Carte d'identit\\xE9 ou Passeport\"\n                })\n              })]\n            }), _jsxs(FormControl, {\n              children: [_jsx(FormControl.Label, {\n                children: \"Photo personnelle\"\n              }), _jsx(Text, {\n                italic: true,\n                fontSize: \"xs\",\n                children: \"Veuillez s'il vous pla\\xEEt prendre une photo de votre visage avec votre carte d'identit\\xE9 \\xE0 c\\xF4t\\xE9 de votre visage pour confirmer votre identit\\xE9.\"\n              }), _jsx(Stack, {\n                direction: {\n                  base: \"column\",\n                  md: \"row\"\n                },\n                space: 4,\n                marginTop: \"2\",\n                children: _jsx(Button, {\n                  leftIcon: _jsx(Icon, {\n                    as: Ionicons,\n                    name: \"cloud-upload-outline\",\n                    size: \"sm\"\n                  }),\n                  children: \"Photo personnelle\"\n                })\n              })]\n            }), _jsx(HStack, {\n              space: 4,\n              children: _jsx(Checkbox, {\n                shadow: 2,\n                size: \"sm\",\n                value: \"test\",\n                accessibilityLabel: \"This is a dummy checkbox\",\n                defaultIsChecked: true,\n                children: _jsx(Text, {\n                  fontSize: \"xs\",\n                  children: \"J'ai lu et j'accepte les conditions g\\xE9n\\xE9rales d'utilisation\"\n                })\n              })\n            })]\n          }), _jsxs(Center, {\n            children: [_jsx(Button, {\n              bg: \"#013d77\",\n              onPress: function onPress() {\n                return setIsOpen(!isOpen);\n              },\n              children: \"Valider l'inscription\"\n            }), _jsx(AlertDialog, {\n              leastDestructiveRef: cancelRef,\n              isOpen: isOpen,\n              onClose: onClose,\n              children: _jsxs(AlertDialog.Content, {\n                children: [_jsx(AlertDialog.CloseButton, {}), _jsx(AlertDialog.Header, {\n                  children: \"Merci !\"\n                }), _jsx(AlertDialog.Body, {\n                  children: \"Merci pour votre inscription. Vous recevrez un message de validation par e-mail et pourrez vous connecter d\\xE8s que vos donn\\xE9es auront \\xE9t\\xE9 valid\\xE9es par un administrateur.\"\n                }), _jsx(AlertDialog.Footer, {\n                  children: _jsx(Button.Group, {\n                    space: 2,\n                    children: _jsx(Button, {\n                      bg: \"#013d77\",\n                      onPress: onClose,\n                      children: \"Compris !\"\n                    })\n                  })\n                })]\n              })\n            })]\n          })]\n        })\n      })\n    })\n  });\n};\n\nvar stylesBackground = StyleSheet.create({\n  background: {\n    flex: 1,\n    backgroundColor: colors.primaryBackground,\n    justifyContent: \"flex-end\",\n    alignItems: \"center\",\n    textAlign: \"center\"\n  }\n});\nvar styles = StyleSheet.create({\n  space: {\n    width: 20,\n    height: 20\n  }\n});\nvar stylesMiddle = StyleSheet.create({\n  middle: {\n    width: 200,\n    height: 200,\n    position: \"absolute\",\n    top: 50\n  }\n});\nvar styleLoginButton = StyleSheet.create({\n  loginButton: {\n    width: 300,\n    height: 70,\n    borderRadius: 30,\n    backgroundColor: \"#fc5c65\",\n    justifyContent: \"center\"\n  },\n  registerButton: {\n    width: 300,\n    height: 70,\n    borderRadius: 30,\n    backgroundColor: \"#4ecdc4\",\n    justifyContent: \"center\"\n  }\n});\nvar styleBtn = StyleSheet.create({\n  textButton: {\n    fontSize: 20,\n    textAlign: \"center\",\n    fontWeight: \"bold\",\n    color: \"white\"\n  }\n});\nexport default RegisterScreenTwo;","map":{"version":3,"sources":["C:/Users/Damja/Documents/GitHub/rescueme/src/screens/RegisterScreenTwo.js"],"names":["React","colors","NativeBaseProvider","Center","Heading","VStack","FormControl","Input","Button","HStack","Box","Text","Icon","Stack","Checkbox","AlertDialog","ScrollView","Ionicons","RegisterScreenTwo","navigation","useState","isOpen","setIsOpen","onClose","cancelRef","useRef","color","base","md","stylesBackground","StyleSheet","create","background","flex","backgroundColor","primaryBackground","justifyContent","alignItems","textAlign","styles","space","width","height","stylesMiddle","middle","position","top","styleLoginButton","loginButton","borderRadius","registerButton","styleBtn","textButton","fontSize","fontWeight"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport { StyleSheet, SafeAreaView } from \"react-native\";\r\nimport colors from \"../config/colors\";\r\nimport { NativeBaseProvider, Center, Heading, VStack, FormControl, Input, Button, HStack, Box, Text, Icon, Stack, Checkbox, AlertDialog, ScrollView } from \"native-base\";\r\nimport { Ionicons } from \"@native-base/icons\";\r\n\r\nconst RegisterScreenTwo = ({ navigation }) => {\r\n  const [isOpen, setIsOpen] = React.useState(false);\r\n\r\n  const onClose = () => setIsOpen(false);\r\n\r\n  const cancelRef = React.useRef(null);\r\n  return (\r\n\r\n    <NativeBaseProvider>\r\n      <ScrollView bg=\"#e4e8ff\">\r\n        <Center w=\"100%\">\r\n          <Box safeArea p=\"2\"  w=\"90%\" maxW=\"290\" py=\"8\">\r\n            <Heading size=\"lg\" color=\"coolGray.800\" _dark={{ color: \"warmGray.50\" }} fontWeight=\"semibold\">\r\n              Inscription\r\n            </Heading>\r\n            <Heading mt=\"1\" color= \"#013d77\" _dark={{ color: \"warmGray.200\" }} fontWeight=\"medium\" size=\"xs\">\r\n              Deuxième étape de l'inscription\r\n            </Heading>\r\n            <VStack space={3} mt=\"5\">\r\n              <FormControl >\r\n                <FormControl.Label color=\"#013d77\" >Nom</FormControl.Label>\r\n                <Input borderColor=\"#013d77\"/>\r\n              </FormControl>\r\n              <FormControl>\r\n                <FormControl.Label color=\"#013d77\" >Prénom</FormControl.Label>\r\n                <Input borderColor=\"#013d77\"/>\r\n              </FormControl>\r\n              <FormControl>\r\n                <FormControl.Label>Date de naissance</FormControl.Label>\r\n                <Input borderColor=\"#013d77\"/>\r\n              </FormControl>\r\n              <FormControl>\r\n                <FormControl.Label>Vérification de l'identité</FormControl.Label>\r\n                <Text italic fontSize={\"xs\"}>\r\n                  Veuillez s'il vous plaît prendre une photo de votre document\r\n                  d'identité pour confirmer votre identité.\r\n                </Text>\r\n                <Stack direction={{ base: \"column\", md: \"row\", }} space={4} marginTop=\"2\">\r\n                  <Button variant=\"subtle\" leftIcon={<Icon as={Ionicons} name=\"cloud-upload-outline\" size=\"sm\" />}>\r\n                    Carte d'identité ou Passeport \r\n                  </Button>\r\n                </Stack>\r\n              </FormControl>\r\n              <FormControl>\r\n                <FormControl.Label>Photo personnelle</FormControl.Label>\r\n                <Text italic fontSize={\"xs\"}>\r\n                  Veuillez s'il vous plaît prendre une photo de votre visage avec votre carte d'identité à côté de votre visage pour confirmer votre identité.\r\n                </Text>\r\n                <Stack direction={{ base: \"column\", md: \"row\", }} space={4} marginTop=\"2\">\r\n                  <Button leftIcon={<Icon as={Ionicons} name=\"cloud-upload-outline\" size=\"sm\" />}>\r\n                    Photo personnelle\r\n                  </Button>\r\n                </Stack>\r\n              </FormControl>\r\n              <HStack space={4}>\r\n                <Checkbox  shadow={2} size=\"sm\" value=\"test\" accessibilityLabel=\"This is a dummy checkbox\" defaultIsChecked>\r\n                  <Text fontSize={\"xs\"}>J'ai lu et j'accepte les conditions générales d'utilisation</Text>\r\n                </Checkbox>\r\n              </HStack>\r\n            </VStack>\r\n            <Center>\r\n              <Button bg=\"#013d77\" onPress={() => setIsOpen(!isOpen)}>\r\n                Valider l'inscription\r\n              </Button>\r\n              <AlertDialog leastDestructiveRef={cancelRef} isOpen={isOpen} onClose={onClose}>\r\n                <AlertDialog.Content>\r\n                  <AlertDialog.CloseButton />\r\n                  <AlertDialog.Header>Merci !</AlertDialog.Header>\r\n                  <AlertDialog.Body>\r\n                    Merci pour votre inscription. Vous recevrez un message de validation par e-mail et pourrez vous connecter dès que vos données auront été validées par un administrateur.\r\n                  </AlertDialog.Body>\r\n                  <AlertDialog.Footer>\r\n                    <Button.Group space={2}>\r\n                      <Button bg=\"#013d77\" onPress={onClose}>\r\n                        Compris !\r\n                      </Button>\r\n                    </Button.Group>\r\n                  </AlertDialog.Footer>\r\n                </AlertDialog.Content>\r\n              </AlertDialog>\r\n            </Center>\r\n          </Box>\r\n        </Center>\r\n      </ScrollView>\r\n    </NativeBaseProvider>\r\n\r\n  );\r\n};\r\n\r\nconst stylesBackground = StyleSheet.create({\r\n  background: {\r\n    flex: 1,\r\n    backgroundColor: colors.primaryBackground,\r\n    justifyContent: \"flex-end\",\r\n    alignItems: \"center\",\r\n    textAlign: \"center\",\r\n  },\r\n});\r\n\r\nconst styles = StyleSheet.create({\r\n  space: {\r\n    width: 20, // or whatever size you need\r\n    height: 20,\r\n  },\r\n});\r\n\r\nconst stylesMiddle = StyleSheet.create({\r\n  middle: {\r\n    width: 200,\r\n    height: 200,\r\n    position: \"absolute\",\r\n    top: 50,\r\n  },\r\n});\r\n\r\nconst styleLoginButton = StyleSheet.create({\r\n  loginButton: {\r\n    width: 300,\r\n    height: 70,\r\n    borderRadius: 30,\r\n    backgroundColor: \"#fc5c65\",\r\n    justifyContent: \"center\",\r\n  },\r\n  registerButton: {\r\n    width: 300,\r\n    height: 70,\r\n    borderRadius: 30,\r\n    backgroundColor: \"#4ecdc4\",\r\n    justifyContent: \"center\",\r\n  },\r\n});\r\n\r\nconst styleBtn = StyleSheet.create({\r\n  textButton: {\r\n    fontSize: 20,\r\n    textAlign: \"center\",\r\n    fontWeight: \"bold\",\r\n    color: \"white\",\r\n  },\r\n});\r\n\r\nexport default RegisterScreenTwo;\r\n"]},"metadata":{},"sourceType":"module"}